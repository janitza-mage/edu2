--
-- PostgreSQL database dump
--

-- Dumped from database version 14.11 (Ubuntu 14.11-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.11 (Ubuntu 14.11-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Data for Name: Author; Type: TABLE DATA; Schema: edu2; Owner: -
--

COPY edu2."Author" (id, name) FROM stdin;
1	Martin
\.


--
-- Data for Name: Course; Type: TABLE DATA; Schema: edu2; Owner: -
--

COPY edu2."Course" (id, "authorId", title, description, "scriptLibrary") FROM stdin;
5	1	Linear Algebra 3 (abstract vector spaces)	This course continues the way towards abstraction taken in Linear Algebra 2 and drops even\nthe notion of a vector as a tuple of numbers, keeping only the rules for handling them.\nThis abstraction allows us to treat other things as vectors, such as functions.	
3	1	Linear Algebra 1 (vectors as arrows)	This course is an introduction into linear algebra. It defines vectors as mathematical\nobjects that represent real-world things such as displacement, velocity and forces.\n\n[This intro video from Khan Academy should help those who have never heard of vectors\nbefore](https://www.youtube.com/watch?v=br7tS1t2SFE)\n	
1	1	Linear Algebra 2 ($\\mathbb{R}^n$ vector space)	This course develops the $\\mathbb{R}^n$ vector space purely as a numerical object, dropping the\nnotion of arrows with a direction and length. It serves as a step towards abstract vector\nspaces.\n\nIf you have not completed Linear Algebra 1 yet, caution is advised: You may find the\ncontent of this course to be too abstract to understand.\n	\n// --------------------------------------------------------------------------------------------------------------------\n// generic\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction repeat(n, factory) {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(factory());\n  }\n  return result;\n}\n\nfunction removeNullish(array) {\n  return array.filter((x) => x !== null && x !== undefined);\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n// Katex formatting\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction arrow(what) {\n  return "\\\\vec{" + what + "}";\n}\n\nfunction col(a, b, c, d) {\n  if (b === undefined) {\n    return `\\\\begin{pmatrix}${a}\\\\end{pmatrix}`;\n  }\n  if (c === undefined) {\n    return `\\\\begin{pmatrix}${a}\\\\\\\\${b}\\\\end{pmatrix}`;\n  }\n  if (d === undefined) {\n    return `\\\\begin{pmatrix}${a}\\\\\\\\${b}\\\\\\\\${c}\\\\end{pmatrix}`;\n  }\n  return `\\\\begin{pmatrix}${a}\\\\\\\\${b}\\\\\\\\${c}\\\\\\\\${d}\\\\end{pmatrix}`;\n}\n\n\n// --------------------------------------------------------------------------------------------------------------------\n// Vector math\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction randomComponent(maxAbs) {\n  return randomInt(maxAbs * 2 + 1) - maxAbs;\n}\n\nfunction randomVector(dimension, maxAbs) {\n  if (dimension < 1 || dimension > 4) {\n    throw new Error("dimension must be between 1 and 4");\n  }\n  return col(\n      randomComponent(maxAbs),\n      dimension >= 2 ? randomComponent(maxAbs) : undefined,\n      dimension >= 3 ? randomComponent(maxAbs) : undefined,\n      dimension >= 4 ? randomComponent(maxAbs) : undefined,\n  );\n}\n\nfunction simpleR3Exercise(description, v1, v2, v3, moreWrongAnswers) {\n  return {\n    description,\n    type: "ChooseOne",\n    rightAnswer: "$" + col(v1, v2, v3) + "$",\n    wrongAnswers: [\n      "$" + col(v1 + 1, v2 - 1, v3 + 1) + "$",\n      "$" + col(v1 - 1, v2, v3) + "$",\n      "$" + col(v1, v2, v3 + 1) + "$",\n      ...(moreWrongAnswers ?? []),\n    ],\n  };\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n// export\n// --------------------------------------------------------------------------------------------------------------------\n\n// noinspection JSAnnotator\nreturn {\n  repeat,\n  removeNullish,\n  randomInt,\n  arrow,\n  col,\n  randomComponent,\n  randomVector,\n  simpleR3Exercise,\n};\n
14	1	Elias	only used to test the technical features of this platform	
6	1	tech test	only used to test the technical features of this platform	createPassiveCanvas = ({ onRender, onPosition, onClick }) => {\n\n  const $canvas = $("<canvas width='500' height='500' style='max-width: 100%'></canvas>");\n  const canvas = $canvas[0];\n  const context = canvas.getContext("2d");\n\n  const $root = $("<div>");\n  const root = $root[0];\n  $root.append($canvas);\n\n  const state = {\n    $canvas,\n    canvas,\n    context,\n    $root,\n    root,\n    position: { x: 0, y: 0 },\n  }\n  let dirty = true;\n\n  const updatePosition = (event) => {\n    var offset = $canvas.offset();\n    var x = (event.pageX - offset.left) / $canvas.width() * 500;\n    var y = (event.pageY - offset.top) / $canvas.height() * 500;\n    state.position = { x, y };\n  };\n  \n  canvas.addEventListener("mousemove", (event) => {\n    updatePosition(event);\n    if (onPosition) {\n      dirty = dirty || onPosition(state);\n    }\n  });\n  \n  canvas.addEventListener("click", (event) => {\n    updatePosition(event);\n    if (onPosition) {\n      dirty = dirty || onPosition(state);\n    }\n    if (onClick) {\n      dirty = dirty || onClick(state);\n    }\n  });\n  \n  setInterval(() => {\n    if (dirty) {\n      dirty = false;\n      onRender(state);\n    }\n  }, 50);\n\n  return state;\n};\n\nsetupCoordinateGridCanvas = (context, minX, maxX, minY, maxY) => {\n\n    // parameter normalization and computing derived values\n    minX = Math.round(minX);\n    maxX = Math.round(maxX);\n    minY = Math.round(minY);\n    maxY = Math.round(maxY);\n    const startX = minX - 0.5;\n    const endX = maxX + 0.5;\n    const startY = minY - 0.5;\n    const endY = maxY + 0.5;\n\n    // transformation\n    context.resetTransform();\n    context.scale(1 / (maxX - minX + 1) * context.canvas.width, -1 / (maxY - minY + 1) * context.canvas.height);\n    context.translate(-startX, -endY);\n\n    // grid\n    context.strokeStyle = "lightgrey";\n    context.lineWidth = 0.1;\n    context.beginPath();\n    for (let x = minX; x <= maxX; x++) {\n        context.moveTo(x, startY);\n        context.lineTo(x, endY);\n    }\n    for (let y = minY; y <= maxY; y++) {\n        context.moveTo(startX, y);\n        context.lineTo(endX, y);\n    }\n    context.stroke();\n\n    // main axes\n    context.strokeStyle = "black";\n    context.lineWidth = 0.1;\n    context.beginPath();\n    context.moveTo(startX, 0);\n    context.lineTo(endX, 0);\n    context.moveTo(0, startY);\n    context.lineTo(0, endY);\n    context.stroke();\n\n    // arrows\n    context.beginPath();\n    context.moveTo(endX - 0.05, 0);\n    context.lineTo(endX - 0.2, -0.2);\n    context.moveTo(endX - 0.05, 0);\n    context.lineTo(endX - 0.2, +0.2);\n    context.moveTo(0, endY - 0.05);\n    context.lineTo(-0.2, endY - 0.2);\n    context.moveTo(0, endY - 0.05);\n    context.lineTo(+0.2, endY - 0.2);\n    context.stroke();\n\n    // sane and stable defaults\n    context.strokeStyle = "black";\n    context.fillStyle = "black";\n    context.lineWidth = 0.1;\n    context.setLineDash([]);\n\n};\n\npoint = (context, x, y, size = 0.15) => {\n    context.beginPath();\n    context.arc(x, y, size, 0, 2 * Math.PI);\n    context.fill();\n};\n\narrow = (context, x1, y1, x2, y2, tipSize = 0.2) => {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const ndx = dx / length;\n    const ndy = dy / length;\n\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(x2 - tipSize * ndx - tipSize * ndy, y2 - tipSize * ndy + tipSize * ndx);\n    context.moveTo(x2, y2);\n    context.lineTo(x2 - tipSize * ndx + tipSize * ndy, y2 - tipSize * ndy - tipSize * ndx);\n    context.stroke();\n};\n\n// The extensionFactor should normally be enough, but in case it is not, it can be increased by the caller. Don't pass\n// a super-large number by default -- this could cause rounding problems.\ninfiniteLine = (context, x1, y1, x2, y2, extensionFactor = 1000) => {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    context.beginPath();\n    context.moveTo(x1 - extensionFactor * dx, y1 - extensionFactor * dy);\n    context.lineTo(x2 + extensionFactor * dx, y2 + extensionFactor * dy);\n    context.stroke();\n};\n\nshowXAxisAngle = (context, x1, y1, x2, y2) => {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const intersectionX = x1 - y1 * dx / dy;\n\n    context.beginPath();\n    context.arc(intersectionX, 0, 0.2, 0, 2 * Math.PI);\n    context.fill();\n    context.beginPath();\n    context.arc(intersectionX, 0, 0.6, 0, 0.5 * Math.PI); // TODO\n    context.stroke();\n};\n\n
\.


--
-- Data for Name: Image; Type: TABLE DATA; Schema: edu2; Owner: -
--

COPY edu2."Image" (id, "courseId", "contentType", data) FROM stdin;
2	6	image/png	\\
6	6	image/jpeg	\\
\.


--
-- Data for Name: Unit; Type: TABLE DATA; Schema: edu2; Owner: -
--

COPY edu2."Unit" (id, "courseId", index, title, description, "exerciseUrl", "exerciseDefinition", "exerciseScript") FROM stdin;
4	1	1	Notation for Vector Variables	We use a letter with an arrow on top to denote a variable for an unknown or arbitrary vector, like $\\vec{a}$.\nLetters without an arrow denote numbers. This way we can easily distinguish between them.	\N	{"type": "script"}	context.showExerciseSheet(courseLibrary.repeat(2, () => {\n  const r = courseLibrary.randomInt(3);\n  const right = "$" + courseLibrary.arrow(r === 0 ? "a" : r === 1 ? "b" : "c") + "$";\n  const wrong1 = "$" + (r === 0 ? "b" : r === 1 ? "c" : "a") + "$";\n  const wrong2 = "$" + (r === 0 ? "c" : r === 1 ? "a" : "b") + "$";\n  return {\n    description: "Which of these variables is used for a vector?",\n    type: "ChooseOne",\n    rightAnswer: right,\n    wrongAnswers: [wrong1, wrong2],\n  };\n}));\n
9	1	4	Zero Vector	One thing that was of little importance with arrows was the _zero vector_ -- a vector\nthat, when added to any other vector, does not change it:\n\n> $\\vec{v} + \\vec{0} = \\vec{v}$\n\n> $\\vec{0} + \\vec{v} = \\vec{v}$\n\nUnlike for arrows, the zero vector will be very important here.	\N	{"type": "explicit", "exercises": [{"type": "ChooseOne", "description": "We have not yet said what the zero vector looks like in numbers. But we know that it must leave the other vector alone when added. From that, there is only one possible way the zero vector can look like. What is the zero vector for the $\\\\mathbb{R}^3$ vector space?\\n\\nHint: remember the formula for addition.", "rightAnswer": "$\\\\begin{pmatrix}0\\\\\\\\0\\\\\\\\0\\\\end{pmatrix}$", "wrongAnswers": ["$\\\\begin{pmatrix}0\\\\\\\\0\\\\end{pmatrix}$", "$\\\\begin{pmatrix}1\\\\\\\\0\\\\\\\\0\\\\end{pmatrix}$"]}]}	
13	1	7	Multiplying a Vector by a Scalar	With numbers, we started with multiplication as a shorthand for repeated addition:\n\n> $3\\cdot x = x + x + x$\n\nand the same can be done with vectors:\n\n> $3\\cdot \\vec{v} = \\vec{v} + \\vec{v} + \\vec{v}$\n\nBut we generalized this for numbers and we can now write something like\n$\\sqrt{2}\\cdot\\sqrt{3}$ for which there is no equivalent in repeated addition.\nTo do the same with vectors, we'll have to define _multiplication of a number\nand a vector_ in such a way that it can be done for any number, and\n\n> $3\\cdot \\vec{v} = \\vec{v} + \\vec{v} + \\vec{v}$\n\nis still true. No problem at all:\n\n> $x\\cdot\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix} = \\begin{pmatrix}x\\cdot a_1\\\\x\\cdot a_2\\\\x\\cdot a_3\\end{pmatrix}$\n\nFor reasons that we will explain later, numbers are also called _scalars_ in the context\nof vectors and vector spaces. For now, just think "number" when you read "scalar".\n	\N	{"type": "script"}	context.showExerciseSheet(courseLibrary.repeat(3, () => {\n  const s = courseLibrary.randomComponent(2);\n  const a1 = courseLibrary.randomComponent(5);\n  const a2 = courseLibrary.randomComponent(5);\n  const a3 = courseLibrary.randomComponent(5);\n  return courseLibrary.simpleR3Exercise(\n    `What is $${s}\\\\cdot${courseLibrary.col(a1, a2, a3)}$?`,\n    s*a1, s*a2, s*a3,\n  );\n}));\n
14	1	8	Multiplication Rules	Let's find out more about the rules of multiplication. Again, remember the formula and\nthink about its consequences.	\N	{"type": "explicit", "exercises": [{"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$0\\\\cdot\\\\vec{v} = \\\\vec{0}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all scalars $s$?\\n\\n$s\\\\cdot\\\\vec{0} = \\\\vec{0}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$1\\\\cdot\\\\vec{v} = \\\\vec{v}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$-1\\\\cdot\\\\vec{v} = -\\\\vec{v}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{a}$, $\\\\vec{b}$ and scalars $x$, $y$?\\n\\n$(x + y)\\\\cdot(\\\\vec{a} + \\\\vec{b}) = x\\\\cdot\\\\vec{a} + y\\\\cdot\\\\vec{b}$", "rightAnswer": false}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{a}$, $\\\\vec{b}$ and scalars $x$, $y$?\\n\\n$(x + y)\\\\cdot(\\\\vec{a} + \\\\vec{b}) = x\\\\cdot\\\\vec{a} + x\\\\cdot\\\\vec{b} + y\\\\cdot\\\\vec{a} + y\\\\cdot\\\\vec{b}$", "rightAnswer": true}]}	
24	14	0	Zweistellige Addition (leicht)	 	\N	{"type": "script"}	\n// --------------------------------------------------------------------------------------------------------------------\n// generic\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction repeat(n, factory) {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(factory());\n  }\n  return result;\n}\n\nfunction removeNullish(array) {\n  return array.filter((x) => x !== null && x !== undefined);\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n// exercise\n// --------------------------------------------------------------------------------------------------------------------\n\ncontext.showExerciseSheet([\n  ...repeat(5,\n    () => {\n      const result = randomInt(15) + 1;\n      const x = randomInt(result - 1) + 1;\n      const y = result - x;\n      return {\n        "description": `Wie viel ergibt ${x} + ${y}?`,\n        "type": "FillInTheBlanks",\n        "stencil": "((:answer))",\n        "variables": [\n          {\n            "name": "answer",\n            "type": "text",\n            "subtype": "number",\n            "expected": "" + result,\n          }\n        ] \n      };\n    }\n  ),\n]);\n
25	6	0	script test	 blabla\n 	\N	{"type": "script"}	context.showExerciseSheet([\n  {\n    description: "This is a cool description.",\n    type: "Script",\n    script: (context) => {\n\n      const canvasState = createPassiveCanvas({\n        onRender: (state) => {\n\n          // background\n          const g = state.context;\n          g.resetTransform();\n          g.fillStyle = "white";\n          g.fillRect(0, 0, state.canvas.width, state.canvas.height);\n\n          // grid\n          setupCoordinateGridCanvas(g, -4, 4, -4, 4);\n\n          // snapped cursor / point\n          const screenSpacePoint = new DOMPoint(state.position.x, state.position.y, 0, 1);\n          const transformedPoint = g.getTransform().inverse().transformPoint(screenSpacePoint);\n          const x = Math.round(transformedPoint.x);\n          const y = Math.round(transformedPoint.y);\n          g.beginPath();\n          g.fillStyle = "blue";\n          g.arc(x, y, 0.2, 0, 2 * Math.PI);\n          g.fill();\n\n          // point label\n          g.translate(x + 0.2, y - 1);\n          g.scale(1, -1);\n          g.font = "1px sans-serif";\n          g.fillText(`(${x} | ${y})`, 0, 0);\n          \n        },\n        onPosition: (state) => true,\n        // onClick,\n      });\n\n      const $button = $("<button>weiter</button>");\n      $button.on("click", () => context.reportResult(true));\n      \n      $(context.element).text('still works').append(canvasState.root).append($button);\n    },\n  },\n]);\n
7	1	2	Vector Addition	We can add two vectors by adding their components:\n\n$\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix} + \\begin{pmatrix}b_1\\\\b_2\\\\b_3\\end{pmatrix} = \\begin{pmatrix}a_1 + b_1\\\\a_2 + b_2\\\\a_3 + b_3\\end{pmatrix}$\n\nFor example,\n\n$\\begin{pmatrix}1\\\\2\\\\0\\end{pmatrix} + \\begin{pmatrix}3\\\\-5\\\\1\\end{pmatrix} = \\begin{pmatrix}4\\\\-3\\\\1\\end{pmatrix}$\n\nIn Linear Algebra 1, we showed that this has the same result as placing the start of the second \narrow at the end of the first arrow. We now drop the idea of arrows and go with the above\nformula alone. 	\N	{"type": "script"}	context.showExerciseSheet(courseLibrary.repeat(3, () => {\n  const a1 = courseLibrary.randomComponent(5);\n  const a2 = courseLibrary.randomComponent(5);\n  const a3 = courseLibrary.randomComponent(5);\n  const b1 = courseLibrary.randomComponent(5);\n  const b2 = courseLibrary.randomComponent(5);\n  const b3 = courseLibrary.randomComponent(5);\n  return courseLibrary.simpleR3Exercise(\n    `What is $${courseLibrary.col(a1, a2, a3)} + ${courseLibrary.col(b1, b2, b3)}$?`,\n    a1 + b1, a2 + b2, a3 + b3,\n    ["$" + courseLibrary.col(a1 + a2 + a3, b1 + b2 + b3) + "$"],\n  );\n}));\n
8	1	3	Vector Subtraction	We can subtract vectors in a similar way. With arrows, subtraction was useful in\nseveral ways: It could place the _end_ of the second arrow at the end of the first\narrow, like addition but backwards. It could also find what arrow one would have\nto add to a given starting arrow to reach a given result arrow, or find the arrow\nfrom one point to another.\n\nAll these different cases did the same thing to the numbers, though:\n\n$\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix} - \\begin{pmatrix}b_1\\\\b_2\\\\b_3\\end{pmatrix} = \\begin{pmatrix}a_1 - b_1\\\\a_2 - b_2\\\\a_3 - b_3\\end{pmatrix}$\n\nSo again, we will redefine subtraction by focusing only on the formula.	\N	{"type": "script"}	context.showExerciseSheet(courseLibrary.repeat(3, () => {\n  const a1 = courseLibrary.randomComponent(5);\n  const a2 = courseLibrary.randomComponent(5);\n  const a3 = courseLibrary.randomComponent(5);\n  const b1 = courseLibrary.randomComponent(5);\n  const b2 = courseLibrary.randomComponent(5);\n  const b3 = courseLibrary.randomComponent(5);\n  return courseLibrary.simpleR3Exercise(\n    `What is $${courseLibrary.col(a1, a2, a3)} - ${courseLibrary.col(b1, b2, b3)}$?`,\n    a1 - b1, a2 - b2, a3 - b3,\n    ["$" + courseLibrary.col(a1 - a2 - a3, b1 - b2 - b3) + "$"],\n  );\n}));\n
3	1	0	Vectors from $\\mathbb{R}^n$	In this course, we want to focus on the rules for doing calculations with vectors, and\nignore the notion of a vector as an arrow with a direction and length. To do so, we must\nfirst pin down how we want to think of a vector during this course.\n\nFrom Linear Algebra 1, we know that a vector can be represented as a tuple of numbers:\nTwo numbers for two-dimensional vectors, three numbers for three-dimensional vectors, and\nso on. These numbers may be negative such as -2, they may be fractions such as $\\frac{1}{3}$,\nand may be irrational such as $\\sqrt{2}$ or $\\pi$.\n\nA vector with two numbers is said to belong to $\\mathbb{R}^2$. We call $\\mathbb{R}^2$ the\n_vector space_ to which that vector belongs.\n\nIf it has three numbers, it belongs to $\\mathbb{R}^3$, and so on. In general, if a vector\nhas $n$ numbers, it belongs to $\\mathbb{R}^n$. \n\nWe write a vector as a column vector. For example, this is a vector from $\\mathbb{R}^3$:\n$\\begin{pmatrix}4\\\\-0.5\\\\1\\end{pmatrix}$\n	\N	{"type": "script"}	context.showExerciseSheet([\n  ...courseLibrary.repeat(2,\n    () => ({\n      description: "Which of these is a vector from $\\\\mathbb{R}^3$?",\n      type: "ChooseOne",\n      rightAnswer: "$" + courseLibrary.randomVector(3, 5) + "$",\n      wrongAnswers: [\n        "$" + courseLibrary.randomVector(1, 5) + "$",\n        "$" + courseLibrary.randomVector(2, 5) + "$",\n        "$" + courseLibrary.randomVector(4, 5) + "$",\n      ],\n    })\n  ),\n  ...courseLibrary.repeat(2,\n    () => {\n      const dimension = courseLibrary.randomInt(3) + 2;\n      return {\n        description: `To which vector space does $${courseLibrary.randomVector(dimension, 5)}$ belong?`,\n        type: "ChooseOne",\n        rightAnswer: `$\\\\mathbb{R}^${dimension}$`,\n        wrongAnswers: courseLibrary.removeNullish([\n          dimension === 2 ? null : "$\\\\mathbb{R}^2$",\n          dimension === 3 ? null : "$\\\\mathbb{R}^3$",\n          dimension === 4 ? null : "$\\\\mathbb{R}^4$",\n        ]),\n      };\n    }\n  ),\n]);\n
10	1	5	Subtracting the Zero Vector	The zero vector has a similar effect in subtraction, but it's a bit more complex.\nRemember the formula for subtraction and work it out yourself!	\N	{"type": "explicit", "exercises": [{"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$\\\\vec{v} - \\\\vec{0} = \\\\vec{v}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$\\\\vec{0} - \\\\vec{v} = \\\\vec{v}$", "rightAnswer": false}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$\\\\vec{v} - \\\\vec{v} = \\\\vec{0}$", "rightAnswer": true}]}	
12	1	6	Inverse Vector	The last exercise has shown that when we subtract a vector from itself, we get the zero vector.\nCan we also find a vector to _add_ to get the zero vector? Yes, and it is called the _inverse_ vector.\nThe inverse to $\\vec{a}$ is written as $-\\vec{a}$ and is obtained by negating all the numbers in $\\vec{a}$:\n\n> $-\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix} = \\begin{pmatrix}-a_1\\\\-a_2\\\\-a_3\\end{pmatrix}$\n\nbecause then,\n\n> $\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix} + (-\\begin{pmatrix}a_1\\\\a_2\\\\a_3\\end{pmatrix}) = \\begin{pmatrix}a_1 + (-a_1)\\\\a_2 + (-a_2)\\\\a_3 + (-a_3)\\end{pmatrix} = \\begin{pmatrix}0\\\\0\\\\0\\end{pmatrix} = \\vec{0}$\n	\N	{"type": "explicit", "exercises": [{"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$(-\\\\vec{v}) + \\\\vec{v} = \\\\vec{0}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{v}$?\\n\\n$(-\\\\vec{v}) = \\\\vec{v}$", "rightAnswer": false}, {"type": "ChooseYesNo", "description": "Is the following correct?\\n\\n$-\\\\vec{0} = \\\\vec{0}$", "rightAnswer": true}, {"type": "ChooseYesNo", "description": "Is the following correct for all vectors $\\\\vec{a}$ and $\\\\vec{b}$?\\n\\n$\\\\vec{a} + (-\\\\vec{b}) = \\\\vec{a} - \\\\vec{b}$", "rightAnswer": true}]}	
18	1	10	Dividing a Vector by a Vector	Can we divide a vector by a vector?\n\nBy logically extending what we did in the previous unit,\n\n> $\\vec{v} = \\frac{\\vec{a}}{\\vec{b}}$\n\nsuch that\n\n> $\\vec{v}\\cdot\\vec{b} = \\vec{a}$\n\nThe first obvious problem with this is that we have not defined any kind of\nmultiplication for two vectors yet. The second problem is that we don't really\nknow what the meaning of such a kind of division operation would be.\n\nIn fact, the reason why we have not defined the multiplication of two vectors\nyet is just that: We have to give it a _meaning_.\n\nNow it is rather obvious that we _could_ define multiplication and division\nfor two vectors just like we did for addition and subtraction, as\n_component-wise_ multiplication and division. But with addition and subtraction,\nwe did that because it reflects the way we can append arrows. This is\nnot the case for multiplication or division: There is no arrow equivalent for it.\n\nThis last paragraph is important enough to be elaborated: We cannot multiply\nor divide two vectors because we _choose_ not to, and we do that because it is\nnot useful. In a way, we are building a "toolbox" to operate on vectors, and\ninstead of a hammer and screwdrivers, it contains addition, subtraction, inverse,\nthe zero vector and scalar multiplication. Now the component-wise multiplication\nof two vectors is simply something that we _could_ put into that toolbox, but has\nno actual use, like putting a salt shaker into a real-world toolbox. So we don't\ndo that, by choice.\n\nWe will later learn about a different way of multiplying two vectors that is\nactually useful. But for now, we'll turn to different things.	\N	{"type": "explicit", "exercises": []}	
16	1	9	Dividing a Vector by a Scalar	Can we divide a vector by a scalar? What would be the meaning of that?\n\nIf we divide a number by 3, we expect to get a number that, when added three\ntimes, adds up to the original number. In general, if we divide $a$ by $s$, we\nexpect to get a result $b$ that when multiplied by $s$ again, returns to $a$:\n\n> $b = \\frac{a}{s}$\n\n> $s\\cdot b = a$\n\nIf $a$ is a vector, and is divided by a scalar $s$, then $b$ must be a vector too,\notherwise multiplying with $a$ cannot ever return to $a$:\n\n> $\\vec{b} = \\frac{\\vec{a}}{s}$\n\n> $s\\cdot\\vec{b} = \\vec{a}$\n\nThe formula for division is, unsurprisingly,\n\n> $\\frac{\\vec{a}}{s} = \\begin{pmatrix}a_1/s\\\\a_2/s\\\\a_3/s\\end{pmatrix} = \\frac{1}{s}\\cdot\\vec{a}$\n\n	\N	{"type": "explicit", "exercises": []}	
19	1	11	Parallel Vectors	With arrows, we could tell whether they are _parallel_, that is, point into the same direction.\nWe can do the same with purely numeric vectors, even though "direction" isn't really a concept\nwe are dealing with. The key is that we can make a vector longer or shorter (without changing\nits direction) by multiplying it with a scalar, so parallel vectors are those where we can make\none vector equal to the other by multiplying it with a scalar.\n	\N	{"type": "script"}	context.showExerciseSheet(courseLibrary.repeat(2, () => {\n  const s = courseLibrary.randomInt(2) + 2;\n  const a1 = courseLibrary.randomComponent(5);\n  const a2 = courseLibrary.randomComponent(5);\n  const a3 = courseLibrary.randomComponent(5);\n  return courseLibrary.simpleR3Exercise(\n    `Which vector is parallel to $${courseLibrary.col(a1, a2, a3)}$?`,\n    s*a1, s*a2, s*a3,\n  );\n}));\n
21	1	12	Vectors in Opposite Direction	With arrows, we had some freedom in whether we would call two vectors \\"parallel\\" if they point into opposite directions.	\N	{"type": "explicit", "exercises": [{"type": "ChooseOne", "epilogue": "Flipping the direction of an arrow is the same as inverting the vector, which is again the same as multiplying by -1:\\n\\n> $-\\\\vec{v} = (-1)\\\\cdot\\\\vec{v}$\\n\\nSo the decision whether we want to consider two vectors parallel if they point into opposite directions is the same decision whether we want to allow negative scalars to make one vector equal to the other. ", "description": "Here are two vectors whose arrows point into opposite directions:\\n\\n> $\\\\begin{pmatrix}1\\\\\\\\2\\\\\\\\0\\\\end{pmatrix}$ and $\\\\begin{pmatrix}-2\\\\\\\\-4\\\\\\\\0\\\\end{pmatrix}$\\n\\nWhat scalar must the first vector be multiplied with to get the second vector?", "rightAnswer": "-2", "wrongAnswers": ["2", "1", "-1"]}]}	
23	14	1	Zweistellige Addition (schwer)	 		{"type": "script"}	\n// --------------------------------------------------------------------------------------------------------------------\n// generic\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction repeat(n, factory) {\n  const result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(factory());\n  }\n  return result;\n}\n\nfunction removeNullish(array) {\n  return array.filter((x) => x !== null && x !== undefined);\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n// exercise\n// --------------------------------------------------------------------------------------------------------------------\n\ncontext.showExerciseSheet([\n  ...repeat(10,\n    () => {\n      const result = randomInt(201) + 130;\n      const x = randomInt(result - 12) + 12;\n      const y = result - x;\n      return {\n        "description": `Wie viel ergibt ${x} + ${y}?`,\n        "type": "FillInTheBlanks",\n        "stencil": "((:answer))",\n        "variables": [\n          {\n            "name": "answer",\n            "type": "text",\n            "subtype": "number",\n            "expected": "" + result,\n          }\n        ] \n      };\n    }\n  ),\n]);\n
22	6	1	Fill-in-the-blanks test iojwgio wjiogjioeg iojgjiojiogwejiog jiogjiowgjiog jiogwegjio gwjioej giowjegioegiow	foo ![image](course:6) bar	\N	{"type": "explicit", "exercises": [{"type": "FillInTheBlanks", "stencil": "foo ((:bar)) baz ((:sel)) nochwas", "variables": [{"name": "bar", "type": "text", "expected": "wurst"}, {"name": "sel", "type": "choice", "rightChoice": "This is the way", "wrongChoices": ["This isn't", "Don't choose me"]}], "description": "blabla"}]}	
\.


--
-- Name: Author_id_seq; Type: SEQUENCE SET; Schema: edu2; Owner: -
--

SELECT pg_catalog.setval('edu2."Author_id_seq"', 1, true);


--
-- Name: Course_id_seq; Type: SEQUENCE SET; Schema: edu2; Owner: -
--

SELECT pg_catalog.setval('edu2."Course_id_seq"', 14, true);


--
-- Name: Image_id_seq; Type: SEQUENCE SET; Schema: edu2; Owner: -
--

SELECT pg_catalog.setval('edu2."Image_id_seq"', 7, true);


--
-- Name: Unit_id_seq; Type: SEQUENCE SET; Schema: edu2; Owner: -
--

SELECT pg_catalog.setval('edu2."Unit_id_seq"', 37, true);


--
-- PostgreSQL database dump complete
--

